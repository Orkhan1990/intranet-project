import { MigrationInterface, QueryRunner } from "typeorm";

export class FistMigration1761310002506 implements MigrationInterface {
    name = 'FistMigration1761310002506'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE \`card_problems\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`description\` varchar(255) NOT NULL, \`cardId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`card_worker_jobs\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`worker_av\` varchar(255) NOT NULL, \`worker_id\` int NOT NULL, \`cardJobId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`card_jobs\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`code\` varchar(255) NOT NULL, \`name\` varchar(255) NOT NULL, \`av\` int NULL, \`price\` int NULL, \`discount\` int NOT NULL, \`oil\` varchar(255) NOT NULL, \`cardId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`cards\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`type\` varchar(255) NOT NULL, \`manufactured\` varchar(255) NOT NULL, \`model\` varchar(255) NOT NULL, \`sassi\` varchar(255) NOT NULL, \`car_number\` varchar(255) NOT NULL, \`produce_date\` varchar(255) NOT NULL, \`km\` varchar(255) NOT NULL, \`qost_number\` varchar(255) NOT NULL, \`payment_type\` varchar(255) NOT NULL, \`nds\` tinyint NOT NULL DEFAULT 0, \`repair_again\` tinyint NOT NULL DEFAULT 0, \`servis_info\` tinyint NOT NULL DEFAULT 0, \`comments\` varchar(255) NULL, \`recommendation\` varchar(255) NOT NULL DEFAULT 1, \`clientId\` int NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`brands\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`name\` varchar(255) NOT NULL, UNIQUE INDEX \`IDX_96db6bbbaa6f23cad26871339b\` (\`name\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`spare_parts\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`code\` varchar(255) NOT NULL, \`orig_code\` varchar(255) NOT NULL, \`name\` varchar(255) NOT NULL, \`liquidity\` varchar(255) NOT NULL, \`count\` int NOT NULL, \`price\` int NOT NULL, \`sell_price\` int NOT NULL, \`barcode\` varchar(255) NULL, \`row\` varchar(255) NULL, \`column\` varchar(255) NULL, \`brandId\` int NULL, \`prixodId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`prixods\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`invoice\` varchar(255) NOT NULL, \`market\` varchar(255) NOT NULL, \`payment_type\` varchar(255) NOT NULL, \`comment\` varchar(255) NOT NULL, \`message\` varchar(255) NULL, \`order_id\` int NULL, \`supplierId\` int NULL, \`userId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`order_history\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`step\` enum ('orderConfirm', 'orderAccept', 'responsibleFromOrder', 'responsibleUserBegin', 'requestToSupplier', 'responseFromSupplier', 'calculationBegin', 'calculationAccept', 'choosingBestSupplier', 'requestSupplier', 'processingSupplier', 'accountantAccept', 'clientConfirm', 'reject', 'directorAccept') NOT NULL, \`confirm\` tinyint NOT NULL DEFAULT 0, \`show_hide\` tinyint NOT NULL DEFAULT 0, \`show_result\` tinyint NOT NULL DEFAULT 0, \`message\` varchar(255) NULL, \`reject\` varchar(255) NULL, \`file\` varchar(255) NULL, \`date\` datetime NULL, \`userId\` int NULL, \`orderId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`supplier_order_history\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`date\` datetime NULL, \`file\` varchar(255) NULL, \`supplier_id\` int NULL, \`order_history_id\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`suppliers\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`supplier\` varchar(255) NOT NULL, \`country\` varchar(255) NULL, \`contact_person\` varchar(255) NOT NULL, \`phone\` varchar(255) NOT NULL, \`email\` varchar(255) NOT NULL, \`paymnet_type\` varchar(255) NOT NULL, \`deliver_type\` varchar(255) NOT NULL, \`deliver_period\` varchar(255) NOT NULL, \`credit_line\` varchar(255) NULL, \`credit_note\` varchar(255) NULL, \`credit_duration\` varchar(255) NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`supplier_orderParts\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`date\` datetime NULL, \`orig_code\` varchar(255) NULL, \`count\` int NULL, \`is_the_best_supplier\` tinyint NOT NULL DEFAULT 0, \`delivering\` varchar(255) NULL, \`price\` decimal(10,2) NULL, \`total_price\` decimal(10,2) NULL, \`transport\` decimal(10,2) NULL, \`sip_price\` decimal(10,2) NULL, \`unit_sip_price\` decimal(10,2) NULL, \`percent\` decimal(10,2) NULL, \`profit\` decimal(10,2) NULL, \`sell_price\` decimal(10,2) NULL, \`unit_sell_price\` decimal(10,2) NULL, \`stock_quantity\` varchar(255) NULL, \`part_name\` varchar(255) NULL, \`supplier_id\` int NULL, \`order_part_id\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`order_parts\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`orig_code\` varchar(255) NULL, \`count\` int NULL, \`delivering\` varchar(255) NULL, \`price\` decimal(10,2) NULL DEFAULT '0.00', \`total_price\` decimal(10,2) NULL DEFAULT '0.00', \`transport_value\` decimal(10,2) NULL DEFAULT '0.00', \`transport\` decimal(10,2) NULL DEFAULT '0.00', \`sip_price\` decimal(10,2) NULL DEFAULT '0.00', \`unit_sip_price\` decimal(10,2) NULL DEFAULT '0.00', \`percent\` decimal(10,2) NULL DEFAULT '0.00', \`profit\` decimal(10,2) NULL DEFAULT '0.00', \`sell_price\` decimal(10,2) NULL DEFAULT '0.00', \`unit_sell_price\` decimal(10,2) NULL DEFAULT '0.00', \`stock_quantity\` varchar(255) NULL DEFAULT '0', \`part_name\` varchar(255) NULL DEFAULT '0', \`qtyInStock\` int NULL DEFAULT '0', \`qtyForStock\` int NULL DEFAULT '0', \`priceListExw\` int NULL DEFAULT '0', \`price_exw\` decimal(10,2) NULL DEFAULT '0.00', \`price_exw_no_discount\` decimal(10,2) NULL DEFAULT '0.00', \`price_without_packing\` decimal(10,2) NULL DEFAULT '0.00', \`packing\` decimal(10,2) NULL DEFAULT '0.00', \`total_price_standart\` decimal(10,2) NULL DEFAULT '0.00', \`total_price_man_value\` decimal(10,2) NULL DEFAULT '0.00', \`total_price_man\` decimal(10,2) NULL DEFAULT '0.00', \`netto_by_unit\` decimal(10,2) NULL DEFAULT '0.00', \`total_netto\` decimal(10,2) NULL DEFAULT '0.00', \`transport_man_value\` decimal(10,2) NULL DEFAULT '0.00', \`transport_man\` decimal(10,2) NULL DEFAULT '0.00', \`cip_price\` decimal(10,2) NULL DEFAULT '0.00', \`tax_value\` decimal(10,2) NULL DEFAULT '0.00', \`tax\` decimal(10,2) NULL DEFAULT '0.00', \`accessory_cost\` decimal(10,2) NULL DEFAULT '0.00', \`accessory_cost_value\` decimal(10,2) NULL DEFAULT '0.00', \`declaration_value\` decimal(10,2) NULL DEFAULT '0.00', \`declaration\` decimal(10,2) NULL DEFAULT '0.00', \`ddp_price\` decimal(10,2) NULL DEFAULT '0.00', \`unit_ddp_price\` decimal(10,2) NULL DEFAULT '0.00', \`percentage_value\` decimal(10,2) NULL DEFAULT '0.00', \`percentage\` decimal(10,2) NULL DEFAULT '0.00', \`sell_price_client_stock\` decimal(10,2) NULL DEFAULT '0.00', \`rabatgrup_ind\` int NULL DEFAULT '0', \`total_sell_price_client_ordered\` decimal(10,2) NULL DEFAULT '0.00', \`sell_price_unit_which_in_stock\` decimal(10,2) NULL DEFAULT '0.00', \`reserved\` decimal(10,2) NULL DEFAULT '0.00', \`total_sell_price_which_in_stock\` decimal(10,2) NULL DEFAULT '0.00', \`total_sell_price_ordered_which_in_stock\` decimal(10,2) NULL DEFAULT '0.00', \`orderId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`prixod_hist\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`level\` varchar(255) NOT NULL, \`confirm\` tinyint NOT NULL, \`reject\` varchar(255) NULL, \`date\` datetime NOT NULL, \`file\` varchar(255) NULL, \`order_id\` int NULL, \`userId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`orders\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`project\` varchar(255) NULL, \`card_number\` varchar(255) NULL, \`order_type\` varchar(255) NOT NULL, \`manufacturer\` varchar(255) NOT NULL, \`model\` varchar(255) NOT NULL, \`chassis_number\` varchar(255) NOT NULL, \`engine_number\` varchar(255) NOT NULL, \`produce_year\` varchar(255) NOT NULL, \`km\` varchar(255) NOT NULL, \`isExcellFile\` tinyint NOT NULL DEFAULT 0, \`vehicle_number\` varchar(255) NOT NULL, \`payment_type\` varchar(255) NOT NULL, \`delivering\` varchar(255) NOT NULL, \`delivering_type\` varchar(255) NOT NULL, \`initial_payment\` varchar(255) NOT NULL, \`status\` enum ('open', 'close') NOT NULL DEFAULT 'open', \`comment\` varchar(255) NOT NULL, \`oil\` tinyint NOT NULL DEFAULT 0, \`stage\` enum ('created', 'warehouseConfirm', 'responsibleUser', 'requestToSupplier', 'responseFromSupplier', 'giveTheOrder', 'accounting_Approval', 'payment', 'finish') NOT NULL DEFAULT 'created', \`confirm\` tinyint NOT NULL DEFAULT 0, \`confirm_date\` datetime NULL, \`confirm_warehouse_date\` datetime NULL, \`responsible_start_date\` datetime NULL, \`request_to_supplier_date\` datetime NULL, \`response_from_supplier_date\` datetime NULL, \`give_order_date\` datetime NULL, \`accounting_approval_date\` datetime NULL, \`payment_date\` datetime NULL, \`send_date\` datetime NULL, \`accept\` tinyint NOT NULL DEFAULT 0, \`accept_date\` datetime NULL, \`accept_message\` varchar(255) NULL, \`reject_message\` varchar(255) NULL, \`is_responsible\` tinyint NOT NULL DEFAULT 0, \`responsible_date\` datetime NULL, \`responsible_begin_date\` datetime NULL, \`responsible_message\` varchar(255) NULL, \`is_request_suplier\` tinyint NOT NULL DEFAULT 0, \`initial_message_to_supplier\` varchar(255) NULL, \`second_message_to_supplier\` varchar(255) NULL, \`is_finish_calculation\` tinyint NOT NULL DEFAULT 0, \`userId\` int NULL, \`clientId\` int NULL, \`responsibleUserId\` int NULL, \`prixodsId\` int NULL, \`prixodHistId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`clients\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`company_name\` varchar(255) NOT NULL, \`company_representative\` varchar(255) NOT NULL, \`phone_number\` varchar(255) NOT NULL, \`email\` varchar(255) NOT NULL, \`address\` varchar(255) NOT NULL, \`requisite\` varchar(255) NOT NULL, \`voen\` varchar(255) NOT NULL, \`contract_number\` varchar(255) NOT NULL, \`contract_date\` varchar(255) NOT NULL, \`approver\` varchar(255) NOT NULL, \`oneCCode\` varchar(255) NULL, \`type\` varchar(255) NOT NULL DEFAULT 'customer', \`type_of_status\` varchar(255) NOT NULL DEFAULT 'phisical', \`av\` int NULL, \`parts_discount\` int NULL, \`userId\` int NOT NULL, UNIQUE INDEX \`IDX_99ba9f1605b7b03bfaf8e6badf\` (\`company_name\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`users\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`userName\` varchar(255) NOT NULL, \`first_name\` varchar(255) NULL, \`last_name\` varchar(255) NULL, \`email\` varchar(255) NOT NULL, \`user_role\` varchar(255) NOT NULL DEFAULT 'ServiceUser', \`password\` varchar(255) NOT NULL, \`cardWorkerJobId\` int NULL, UNIQUE INDEX \`IDX_226bb9aa7aa8a69991209d58f5\` (\`userName\`), UNIQUE INDEX \`IDX_97672ac88f789774dd47f7c8be\` (\`email\`), UNIQUE INDEX \`REL_0c3f075afca9bec9e0d7250eed\` (\`cardWorkerJobId\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`price_lists\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`name\` varchar(255) NOT NULL, \`nameDe\` varchar(255) NOT NULL, \`kod\` varchar(255) NOT NULL, \`origkod\` varchar(255) NOT NULL, \`price\` decimal(10,2) NULL, \`quantity\` varchar(255) NULL DEFAULT '1', \`weight\` decimal(10,2) NULL, \`rabatgrup\` int NOT NULL, \`type\` enum ('sachs1', 'sachs2', 'lemfer', 'knor', 'dt', 'hengs', 'man') NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`price_list_hist\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`name\` varchar(50) NOT NULL, \`namede\` varchar(50) NOT NULL, \`kod\` varchar(50) NULL, \`origKod\` varchar(50) NOT NULL, \`price\` decimal(10,2) NULL, \`weight\` int NOT NULL, \`quantity\` int NULL, \`type\` enum ('sachs1', 'sachs2', 'lemfer', 'knor', 'dt', 'hengs', 'man') NOT NULL, \`rabatgrup\` int NOT NULL, \`year\` int NULL, \`month\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`rabatgrup\` (\`id\` int NOT NULL AUTO_INCREMENT, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`rabatgrup_ind\` int NULL, \`discount\` decimal(10,2) NULL, \`notation\` decimal(10,2) NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`card_problems_service_workers_users\` (\`cardProblemsId\` int NOT NULL, \`usersId\` int NOT NULL, INDEX \`IDX_6f4898d8b20cb35d8cb3ed6f53\` (\`cardProblemsId\`), INDEX \`IDX_8c18d1f1bc831b1ef5289a5e20\` (\`usersId\`), PRIMARY KEY (\`cardProblemsId\`, \`usersId\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`orders_suppliers_suppliers\` (\`ordersId\` int NOT NULL, \`suppliersId\` int NOT NULL, INDEX \`IDX_c3ca6f0311ccf0f40169f85fe3\` (\`ordersId\`), INDEX \`IDX_a325796b3a7c1b470659b94c93\` (\`suppliersId\`), PRIMARY KEY (\`ordersId\`, \`suppliersId\`)) ENGINE=InnoDB`);
        await queryRunner.query(`ALTER TABLE \`card_problems\` ADD CONSTRAINT \`FK_ec13c3b3e2a76c49c6c6d73c758\` FOREIGN KEY (\`cardId\`) REFERENCES \`cards\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`card_worker_jobs\` ADD CONSTRAINT \`FK_9305eb330e073c24c26fae46dcb\` FOREIGN KEY (\`cardJobId\`) REFERENCES \`card_jobs\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`card_jobs\` ADD CONSTRAINT \`FK_b1ad2226066f54b039e8824f6a3\` FOREIGN KEY (\`cardId\`) REFERENCES \`cards\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`cards\` ADD CONSTRAINT \`FK_9d6a637355d325d4006f82be27b\` FOREIGN KEY (\`clientId\`) REFERENCES \`clients\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`spare_parts\` ADD CONSTRAINT \`FK_695d5b74e86e87db5e6088a38bf\` FOREIGN KEY (\`brandId\`) REFERENCES \`brands\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`spare_parts\` ADD CONSTRAINT \`FK_a3f96a60b5ddcc94275c3b4a35a\` FOREIGN KEY (\`prixodId\`) REFERENCES \`prixods\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`prixods\` ADD CONSTRAINT \`FK_6671edf87abc65312b72f037059\` FOREIGN KEY (\`order_id\`) REFERENCES \`orders\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`prixods\` ADD CONSTRAINT \`FK_bcea3028065b7e0ab34938bde98\` FOREIGN KEY (\`supplierId\`) REFERENCES \`suppliers\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`prixods\` ADD CONSTRAINT \`FK_3c8e6192f2268c484e4cb6edf3c\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`order_history\` ADD CONSTRAINT \`FK_bff52d1c11a638aed3dd1dad67e\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`order_history\` ADD CONSTRAINT \`FK_e15b4a73a3e53311433968993cc\` FOREIGN KEY (\`orderId\`) REFERENCES \`orders\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`supplier_order_history\` ADD CONSTRAINT \`FK_f91defbc1d544c92cd8418d015a\` FOREIGN KEY (\`supplier_id\`) REFERENCES \`suppliers\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`supplier_order_history\` ADD CONSTRAINT \`FK_2537b53b94c87e67c31194ba7a9\` FOREIGN KEY (\`order_history_id\`) REFERENCES \`order_history\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`supplier_orderParts\` ADD CONSTRAINT \`FK_f44a198d276aedb8c83750b52d6\` FOREIGN KEY (\`supplier_id\`) REFERENCES \`suppliers\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`supplier_orderParts\` ADD CONSTRAINT \`FK_3e439c36a1470027bbee51d8802\` FOREIGN KEY (\`order_part_id\`) REFERENCES \`order_parts\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`order_parts\` ADD CONSTRAINT \`FK_790f388a94f5ffc752754e3d0f8\` FOREIGN KEY (\`orderId\`) REFERENCES \`orders\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`prixod_hist\` ADD CONSTRAINT \`FK_f786d7721c5ff29452d82542ed6\` FOREIGN KEY (\`order_id\`) REFERENCES \`orders\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`prixod_hist\` ADD CONSTRAINT \`FK_f136d635dd7a19c3ac718e7e7bb\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_151b79a83ba240b0cb31b2302d1\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_1457f286d91f271313fded23e53\` FOREIGN KEY (\`clientId\`) REFERENCES \`clients\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_7ef1146d63aa7f4195985374d96\` FOREIGN KEY (\`responsibleUserId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_eb4413e8b5898a8a9e2785a430c\` FOREIGN KEY (\`prixodsId\`) REFERENCES \`prixods\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_e330caaac3e957507b2a7afd8b6\` FOREIGN KEY (\`prixodHistId\`) REFERENCES \`prixod_hist\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`clients\` ADD CONSTRAINT \`FK_59c1e5e51addd6ebebf76230b37\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_0c3f075afca9bec9e0d7250eeda\` FOREIGN KEY (\`cardWorkerJobId\`) REFERENCES \`card_worker_jobs\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`card_problems_service_workers_users\` ADD CONSTRAINT \`FK_6f4898d8b20cb35d8cb3ed6f532\` FOREIGN KEY (\`cardProblemsId\`) REFERENCES \`card_problems\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`card_problems_service_workers_users\` ADD CONSTRAINT \`FK_8c18d1f1bc831b1ef5289a5e20e\` FOREIGN KEY (\`usersId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders_suppliers_suppliers\` ADD CONSTRAINT \`FK_c3ca6f0311ccf0f40169f85fe3e\` FOREIGN KEY (\`ordersId\`) REFERENCES \`orders\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`orders_suppliers_suppliers\` ADD CONSTRAINT \`FK_a325796b3a7c1b470659b94c930\` FOREIGN KEY (\`suppliersId\`) REFERENCES \`suppliers\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`orders_suppliers_suppliers\` DROP FOREIGN KEY \`FK_a325796b3a7c1b470659b94c930\``);
        await queryRunner.query(`ALTER TABLE \`orders_suppliers_suppliers\` DROP FOREIGN KEY \`FK_c3ca6f0311ccf0f40169f85fe3e\``);
        await queryRunner.query(`ALTER TABLE \`card_problems_service_workers_users\` DROP FOREIGN KEY \`FK_8c18d1f1bc831b1ef5289a5e20e\``);
        await queryRunner.query(`ALTER TABLE \`card_problems_service_workers_users\` DROP FOREIGN KEY \`FK_6f4898d8b20cb35d8cb3ed6f532\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_0c3f075afca9bec9e0d7250eeda\``);
        await queryRunner.query(`ALTER TABLE \`clients\` DROP FOREIGN KEY \`FK_59c1e5e51addd6ebebf76230b37\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_e330caaac3e957507b2a7afd8b6\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_eb4413e8b5898a8a9e2785a430c\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_7ef1146d63aa7f4195985374d96\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_1457f286d91f271313fded23e53\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_151b79a83ba240b0cb31b2302d1\``);
        await queryRunner.query(`ALTER TABLE \`prixod_hist\` DROP FOREIGN KEY \`FK_f136d635dd7a19c3ac718e7e7bb\``);
        await queryRunner.query(`ALTER TABLE \`prixod_hist\` DROP FOREIGN KEY \`FK_f786d7721c5ff29452d82542ed6\``);
        await queryRunner.query(`ALTER TABLE \`order_parts\` DROP FOREIGN KEY \`FK_790f388a94f5ffc752754e3d0f8\``);
        await queryRunner.query(`ALTER TABLE \`supplier_orderParts\` DROP FOREIGN KEY \`FK_3e439c36a1470027bbee51d8802\``);
        await queryRunner.query(`ALTER TABLE \`supplier_orderParts\` DROP FOREIGN KEY \`FK_f44a198d276aedb8c83750b52d6\``);
        await queryRunner.query(`ALTER TABLE \`supplier_order_history\` DROP FOREIGN KEY \`FK_2537b53b94c87e67c31194ba7a9\``);
        await queryRunner.query(`ALTER TABLE \`supplier_order_history\` DROP FOREIGN KEY \`FK_f91defbc1d544c92cd8418d015a\``);
        await queryRunner.query(`ALTER TABLE \`order_history\` DROP FOREIGN KEY \`FK_e15b4a73a3e53311433968993cc\``);
        await queryRunner.query(`ALTER TABLE \`order_history\` DROP FOREIGN KEY \`FK_bff52d1c11a638aed3dd1dad67e\``);
        await queryRunner.query(`ALTER TABLE \`prixods\` DROP FOREIGN KEY \`FK_3c8e6192f2268c484e4cb6edf3c\``);
        await queryRunner.query(`ALTER TABLE \`prixods\` DROP FOREIGN KEY \`FK_bcea3028065b7e0ab34938bde98\``);
        await queryRunner.query(`ALTER TABLE \`prixods\` DROP FOREIGN KEY \`FK_6671edf87abc65312b72f037059\``);
        await queryRunner.query(`ALTER TABLE \`spare_parts\` DROP FOREIGN KEY \`FK_a3f96a60b5ddcc94275c3b4a35a\``);
        await queryRunner.query(`ALTER TABLE \`spare_parts\` DROP FOREIGN KEY \`FK_695d5b74e86e87db5e6088a38bf\``);
        await queryRunner.query(`ALTER TABLE \`cards\` DROP FOREIGN KEY \`FK_9d6a637355d325d4006f82be27b\``);
        await queryRunner.query(`ALTER TABLE \`card_jobs\` DROP FOREIGN KEY \`FK_b1ad2226066f54b039e8824f6a3\``);
        await queryRunner.query(`ALTER TABLE \`card_worker_jobs\` DROP FOREIGN KEY \`FK_9305eb330e073c24c26fae46dcb\``);
        await queryRunner.query(`ALTER TABLE \`card_problems\` DROP FOREIGN KEY \`FK_ec13c3b3e2a76c49c6c6d73c758\``);
        await queryRunner.query(`DROP INDEX \`IDX_a325796b3a7c1b470659b94c93\` ON \`orders_suppliers_suppliers\``);
        await queryRunner.query(`DROP INDEX \`IDX_c3ca6f0311ccf0f40169f85fe3\` ON \`orders_suppliers_suppliers\``);
        await queryRunner.query(`DROP TABLE \`orders_suppliers_suppliers\``);
        await queryRunner.query(`DROP INDEX \`IDX_8c18d1f1bc831b1ef5289a5e20\` ON \`card_problems_service_workers_users\``);
        await queryRunner.query(`DROP INDEX \`IDX_6f4898d8b20cb35d8cb3ed6f53\` ON \`card_problems_service_workers_users\``);
        await queryRunner.query(`DROP TABLE \`card_problems_service_workers_users\``);
        await queryRunner.query(`DROP TABLE \`rabatgrup\``);
        await queryRunner.query(`DROP TABLE \`price_list_hist\``);
        await queryRunner.query(`DROP TABLE \`price_lists\``);
        await queryRunner.query(`DROP INDEX \`REL_0c3f075afca9bec9e0d7250eed\` ON \`users\``);
        await queryRunner.query(`DROP INDEX \`IDX_97672ac88f789774dd47f7c8be\` ON \`users\``);
        await queryRunner.query(`DROP INDEX \`IDX_226bb9aa7aa8a69991209d58f5\` ON \`users\``);
        await queryRunner.query(`DROP TABLE \`users\``);
        await queryRunner.query(`DROP INDEX \`IDX_99ba9f1605b7b03bfaf8e6badf\` ON \`clients\``);
        await queryRunner.query(`DROP TABLE \`clients\``);
        await queryRunner.query(`DROP TABLE \`orders\``);
        await queryRunner.query(`DROP TABLE \`prixod_hist\``);
        await queryRunner.query(`DROP TABLE \`order_parts\``);
        await queryRunner.query(`DROP TABLE \`supplier_orderParts\``);
        await queryRunner.query(`DROP TABLE \`suppliers\``);
        await queryRunner.query(`DROP TABLE \`supplier_order_history\``);
        await queryRunner.query(`DROP TABLE \`order_history\``);
        await queryRunner.query(`DROP TABLE \`prixods\``);
        await queryRunner.query(`DROP TABLE \`spare_parts\``);
        await queryRunner.query(`DROP INDEX \`IDX_96db6bbbaa6f23cad26871339b\` ON \`brands\``);
        await queryRunner.query(`DROP TABLE \`brands\``);
        await queryRunner.query(`DROP TABLE \`cards\``);
        await queryRunner.query(`DROP TABLE \`card_jobs\``);
        await queryRunner.query(`DROP TABLE \`card_worker_jobs\``);
        await queryRunner.query(`DROP TABLE \`card_problems\``);
    }

}
